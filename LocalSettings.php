<?php
# This file was automatically generated by the MediaWiki 1.43.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "Chrome Engine Modding Wiki";
$wgMetaNamespace = "Chrome_Engine_Modding_Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";
$wgArticlePath = "{$wgScriptPath}/$1";
$wgUsePathInfo = true;
$wgMainPageIsDomainRoot = true;
wfLoadExtension( 'SemanticMediaWiki' );

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://cemodding.wiki";
enableSemantics( 'cemodding.wiki' );

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/cengine-white-nobackground.png",
	'icon' => "$wgResourceBasePath/cengine-white-nobackground.png",
];
$wgFavicon ="$wgResourceBasePath/cengine-white-nobackground.png";

## UPO means: this is also a user preference option
$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "noreply@cemodding.wiki";
$wgPasswordSender = "noreply@cemodding.wiki";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgGroupPermissions['*']['upload'] = false;

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "https://creativecommons.org/licenses/by-sa/4.0/";
$wgRightsText = "Creative Commons Attribution-ShareAlike";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by-sa.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions["*"]["edit"] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "citizen";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'Citizen' );

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'AbuseFilter' );
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CiteThisPage' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'DiscussionTools' );
wfLoadExtension( 'Echo' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'Linter' );
wfLoadExtension( 'LoginNotify' );
wfLoadExtension( 'Math' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'OATHAuth' );
wfLoadExtension( 'PageImages' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SecureLinkFixer' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'TextExtracts' );
wfLoadExtension( 'Thanks' );
wfLoadExtension( 'TitleBlacklist' );
wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'WikiEditor' );
wfLoadExtension( 'TabberNeue' );
wfLoadExtension("EmbedVideo");
wfLoadExtension( 'DynamicPageList3' );
wfLoadExtension( 'UploadWizard' );
wfLoadExtension( 'CollapsibleSections' );
wfLoadExtension( 'MagicNoCache' );
wfLoadExtension( 'UserProfileV2' );
wfLoadExtension( 'Moderation' );
wfLoadExtension( 'ShortDescription' );
wfLoadExtensions([ 'ConfirmEdit', 'ConfirmEdit/Turnstile' ]);
$wgCaptchaClass = 'MediaWiki\\Extension\\ConfirmEdit\\Turnstile\\Turnstile';
# End of automatically generated settings.
# Add more configuration options below.

$wgVerifyMimeType = true;
$wgMimeDetectorCommand = "file -bi";
$wgMaxUploadSize = 1024 * 1024 * 200;
$wgFileExtensions = [
  'mat', 'scr', 'scd', 'prefab', 'msh', 'skn', 'sdb', 'header', 'desc', 'rpack', 'exp', 'map', 'sobj',
  'webp', 'jpg', 'jpeg', 'png', 'gif', 'bmp', 'tiff', 'svg'
];
$wgUploadWizardConfig = [
	'debug' => false,
	'autoAdd' => [
	 	'wikitext' => [
			'This file was uploaded with the UploadWizard extension.'
			],
	 	'categories' => [
	 		 'Uploaded with UploadWizard'	
	 		 ],
		], 
	'feedbackLink' => false, 
	'alternativeUploadToolsPage' => false, 
	'enableFormData' => true, 
	'enableMultipleFiles' => true,
	'enableMultiFileSelect' => true,
	'uwLanguages' => [
		'ar' => 'العربية',
		'de' => 'Deutsch',
		'en' => 'English'
		], 
	'tutorial' => [
	 	'skip' => true
		], 
	'maxUploads' => 15,
	'fileExtensions' => $wgFileExtensions 
	];

# Cloudflare CDN
$wgUseCdn = true;
$wgCdnServersNoPurge = [
    "173.245.48.0/20",
    "103.21.244.0/22",
    "103.22.200.0/22",
    "103.31.4.0/22",
    "141.101.64.0/18",
    "108.162.192.0/18",
    "190.93.240.0/20",
    "188.114.96.0/20",
    "197.234.240.0/22",
    "198.41.128.0/17",
    "162.158.0.0/15",
    "104.16.0.0/13",
    "104.24.0.0/14",
    "172.64.0.0/13",
    "131.0.72.0/22",
    "2400:cb00::/32",
    "2606:4700::/32",
    "2803:f800::/32",
    "2405:b500::/32",
    "2405:8100::/32",
    "2a06:98c0::/29",
    "2c0f:f248::/32"
];

wfLoadExtension( 'CookieWarning' );
$wgCookieWarningEnabled = true;
$wgCookieWarningMoreUrl = 'Chrome_Engine_Modding_Wiki:Cookie_Policy';

# Add links to footer
$wgHooks['SkinAddFooterLinks'][] = function ( $sk, $key, &$footerlinks ) {
	$rel = 'nofollow noreferrer noopener';

	if ( $key === 'places' ) {
		$footerlinks['cookiestatement'] = Html::element(
			'a',
			[ 
				'href' => $sk->msg( 'cookiestatementpage' )->escaped(),
				'title' => $sk->msg( 'cookiestatementpage' )->text()
			],
			$sk->msg( 'cookiestatement' )->text()
		);
		$footerlinks['statuspage'] = Html::element(
			'a',
			[
				'href' => 'https://chrome-engine-modding-wiki.instatus.com',
				'rel' => $rel
			],
			$sk->msg( 'footer-statuspage' )->text()
		);
		$footerlinks['github'] = Html::element(
			'a',
			[
				'href' => 'https://github.com/Unrealdkman/Chrome-Engine-Modding-Wiki-Public',
				'rel' => $rel
			],
			$sk->msg( 'footer-github' )->text()
		);
		$footerlinks['kofi'] = Html::element(
			'a',
			[
				'href' => 'https://www.ko-fi.com/cemoddingwiki',
				'rel' => $rel
			],
			$sk->msg( 'footer-kofi' )->text()
		);
	}
};

$wgGroupPermissions['contributor'] = [
    'edit' => true,
    'upload' => true,
    'read' => true,
    'createpage' => true,
    'createtalk' => true,
    'writeapi' => true,
];

$wgGroupPermissions['staff'] = $wgGroupPermissions['contributor'] + [
    'moderation' => true,          
    'delete' => true,
    'block' => true,
    'move' => true,
    'protect' => true,
    'editinterface' => true,     
    'upload' => true,
    'edit' => true,
    'moderation-checkuser' => true,
    'skip-moderation' => true,
];

$wgGroupPermissions['user']['edit'] = false;
$wgGroupPermissions['user']['upload'] = false;
$wgGroupPermissions['user']['createpage'] = false;
$wgGroupPermissions['user']['createtalk'] = false;

$wgAddGroups['staff'] = ['contributor'];
$wgRemoveGroups['staff'] = ['contributor'];
